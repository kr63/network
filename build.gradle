buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

plugins {
    id 'java'
    id 'com.gradle.build-scan' version '2.2.1'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'org.flywaydb.flyway' version '5.2.4'
    id 'net.ltgt.apt' version '0.21'
    id 'net.ltgt.apt-idea' version '0.21'
    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    mapstructVersion = "1.3.0.Final"
    lombokVersion = "1.18.6"
    junitVersion = "5.4.1"
    jacocoVersion = "0.8.3"
    springSecurityVersion = "2.0.5.RELEASE"
}

group = 'com.example.network'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

bootJar {
    archivesBaseName = 'network'
    version = '0.0.1'
}

flyway {
    user = 'dbuser'
    password = 'dbpass'
    url = 'jdbc:postgresql://localhost:5432/dbname'
    schemas = ['dbschema']
}

compileJava.dependsOn(processResources)

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // security
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.security.oauth.boot:" +
            "spring-security-oauth2-autoconfigure:${springSecurityVersion}"

    // templates
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"

    // websocket
    compile "org.springframework.boot:spring-boot-starter-websocket"
    
    // spring session
    compile "org.springframework.session:spring-session-jdbc"

    compile "org.flywaydb:flyway-core"
    compile "org.postgresql:postgresql"

    // lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    // mapstruct
    compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testCompileOnly "org.mapstruct:mapstruct:${mapstructVersion}"

    compile 'org.jsoup:jsoup:1.12.1'

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit' //exclude junit4 by both name and group
    }

    testCompile "org.junit.jupiter:junit-jupiter:${junitVersion}"
}

jacoco {
    toolVersion = jacocoVersion
}
test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
